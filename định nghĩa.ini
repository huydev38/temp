Dưới đây là định nghĩa chi tiết về PersistentVolume (PV), PersistentVolumeClaim (PVC), và NFS (Network File System) trong Kubernetes:

1. PersistentVolume (PV)
PersistentVolume (PV) là một đơn vị lưu trữ trong Kubernetes mà được quản lý bởi hệ thống lưu trữ. PV là tài nguyên cấp thấp, đại diện cho một phần lưu trữ có thể sử dụng được, và có thể tồn tại lâu dài hơn vòng đời của các pod trong Kubernetes. Một PV có thể là một ổ đĩa vật lý (local disk) hoặc một dịch vụ lưu trữ đám mây (cloud storage) như AWS EBS, Google Persistent Disk, NFS, v.v.

Các thuộc tính của PV:

Capacity: Dung lượng lưu trữ của volume (ví dụ: 10Gi, 100Gi).
Access Modes: Định nghĩa cách mà PVC và Pod có thể truy cập volume. Các giá trị thường gặp là:
ReadWriteOnce (RWO): Chỉ cho phép một pod trên một node truy cập và có quyền đọc/ghi.
ReadOnlyMany (ROX): Cho phép nhiều pod đọc dữ liệu từ volume nhưng không ghi.
ReadWriteMany (RWX): Cho phép nhiều pod trên nhiều node đọc và ghi vào volume.
ReclaimPolicy: Quy định cách xử lý PV sau khi PVC bị xóa. Các giá trị là:
Retain: Không xóa PV sau khi PVC bị xóa.
Delete: Xóa PV khi PVC bị xóa.
Recycle: Tái sử dụng PV khi PVC bị xóa.
StorageClass: Cung cấp thông tin về loại và tính chất của lưu trữ, ví dụ như tốc độ hoặc cấu hình.
Cách hoạt động của PV:

PV được kết nối với một PersistentVolumeClaim (PVC) thông qua Kubernetes. PVC yêu cầu một lượng dung lượng và các thuộc tính khác, và Kubernetes sẽ tự động tìm PV phù hợp.
2. PersistentVolumeClaim (PVC)
PersistentVolumeClaim (PVC) là một yêu cầu về tài nguyên lưu trữ từ người dùng trong Kubernetes. Khi một pod cần lưu trữ lâu dài, nó sẽ tạo một PVC yêu cầu một PersistentVolume (PV) với dung lượng và tính chất cụ thể. PVC có thể được xem như là cách người dùng yêu cầu một lượng lưu trữ mà không cần phải lo lắng về việc PV sẽ được cấp phát từ đâu.

Các thuộc tính của PVC:

AccessModes: Định nghĩa quyền truy cập (giống như trên PV).
Resources: Xác định dung lượng mà PVC yêu cầu, ví dụ: requests.storage: 10Gi.
StorageClass: Chỉ định một lớp lưu trữ nếu sử dụng Dynamic Provisioning (tạo PV tự động khi tạo PVC).
Cách hoạt động của PVC:

PVC sẽ được kết nối với một PV thỏa mãn các yêu cầu về dung lượng và quyền truy cập. Sau khi PVC được gắn với một PV, pod có thể sử dụng PV này để lưu trữ dữ liệu lâu dài, ngay cả khi pod bị xóa hoặc khởi động lại.
3. NFS (Network File System)
NFS (Network File System) là một giao thức hệ thống tệp được sử dụng để chia sẻ dữ liệu giữa các máy tính trong mạng. NFS cho phép các hệ thống khác nhau chia sẻ dữ liệu qua mạng như thể nó nằm trên ổ đĩa cục bộ. Trong Kubernetes, NFS có thể được sử dụng làm hệ thống lưu trữ cho PV, giúp nhiều pod có thể chia sẻ dữ liệu từ cùng một NFS share.

Các đặc điểm của NFS:

Chia sẻ tệp: NFS cho phép nhiều hệ thống hoặc pod có thể truy cập vào cùng một thư mục từ xa qua mạng.
ReadWriteMany (RWX): NFS là một hệ thống lưu trữ hỗ trợ ReadWriteMany, nghĩa là nhiều pod có thể đọc và ghi vào cùng một thư mục NFS trên nhiều node trong Kubernetes.
Cấu hình đơn giản: NFS có thể cấu hình dễ dàng với các hệ thống khác nhau và thích hợp khi cần chia sẻ dữ liệu giữa nhiều pod hoặc máy chủ.
Cách sử dụng NFS trong Kubernetes:

Bạn có thể sử dụng NFS như một volume trong Kubernetes bằng cách cấu hình một PersistentVolume (PV) sử dụng nfs và chỉ định đường dẫn và địa chỉ của NFS server.
Khi bạn tạo PersistentVolumeClaim (PVC), Kubernetes sẽ tự động gắn kết PVC với PV sử dụng NFS.